[{"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/index.js":"1","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/reportWebVitals.js":"2","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/App.js":"3","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/interceptor/interceptor.js":"4","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/sites/welcome.js":"5","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/sites/home.js":"6","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/login.js":"7","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/settings.js":"8","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/employees.js":"9","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/headerbar.js":"10","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/calendar.js":"11","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/team.js":"12","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/teams.js":"13","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/controls.js":"14","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/modal.js":"15","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/controllers/delete.js":"16","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/controllers/patch.js":"17"},{"size":502,"mtime":1612119458740,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610639759243,"results":"20","hashOfConfig":"19"},{"size":1169,"mtime":1612874576266,"results":"21","hashOfConfig":"19"},{"size":324,"mtime":1612802631276,"results":"22","hashOfConfig":"19"},{"size":571,"mtime":1613224323349,"results":"23","hashOfConfig":"19"},{"size":1002,"mtime":1613228639783,"results":"24","hashOfConfig":"19"},{"size":3336,"mtime":1613224455769,"results":"25","hashOfConfig":"19"},{"size":130,"mtime":1612874461727,"results":"26","hashOfConfig":"19"},{"size":4225,"mtime":1613225943627,"results":"27","hashOfConfig":"19"},{"size":1962,"mtime":1612874797645,"results":"28","hashOfConfig":"19"},{"size":4459,"mtime":1612874775009,"results":"29","hashOfConfig":"19"},{"size":1719,"mtime":1612874743734,"results":"30","hashOfConfig":"19"},{"size":1990,"mtime":1612874811209,"results":"31","hashOfConfig":"19"},{"size":3618,"mtime":1612976798419,"results":"32","hashOfConfig":"19"},{"size":3304,"mtime":1613063785297,"results":"33","hashOfConfig":"19"},{"size":314,"mtime":1613045431060,"results":"34","hashOfConfig":"19"},{"size":325,"mtime":1613045746811,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1mm40wa",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/index.js",[],["76","77"],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/reportWebVitals.js",[],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/App.js",[],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/interceptor/interceptor.js",[],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/sites/welcome.js",[],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/sites/home.js",[],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/login.js",[],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/settings.js",["78","79","80","81"],"import Axios from \"axios\";\nimport React, {useState, useEffect} from \"react\";\n\nconst Settings = () => {\n\n}\n\nexport default Settings","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/employees.js",["82"],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/headerbar.js",["83"],"import React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\"\nimport \"../styles/style.css\"\n\nconst Headerbar = () => {\n\n    const logout = () => {\n        localStorage.clear();\n        window.location.href = \"/\";\n        console.log(\"LOGOUT CALL\")\n      }\n\n      const linksmenu = [\n\n        {\n            title: 'CALENDAR',\n            url: \"/home\",\n            cName: 'sidebarNav',\n            access: \"EMPLOYEE\"\n        },\n        {\n            title: 'EMPLOYEES',\n            url: \"/employees\",\n            cName: 'sidebarNav',\n            access: \"HR\"\n        },\n        {\n            title: 'TEAM',\n            url: \"/team\",\n            cName: 'sidebarNav',\n            access: \"EMPLOYEE\"\n        },\n        {\n            title: 'VACATIONS',\n            url: \"/vacations\",\n            cName: 'sidebarNav',\n            access: \"HR\"\n        },\n        {\n            title: 'TEAMS',\n            url: \"/teams\",\n            cName: 'sidebarNav',\n            access: \"HR\"\n        },\n        {\n            title: 'SETTINGS',\n            url: \"/settings\",\n            cName: 'sidebarNav',\n            access: \"ADMIN\"\n        }\n    ]\n\n        return(\n            <div className=\"headerWrapper\">\n                <div className=\"logo\">jAvalanche</div>\n                <ul className=\"linksmenuNav\">\n                    {linksmenu.map((item, index) => { return (\n                        <li className=\"linksmenuLinks linksShadow\" key={index}>          \n                            <Link to={item.url}>{item.title}</Link>                          \n                        </li>\n                    )})}\n                </ul>\n                <div className=\"profileLinks\">\n                    <button className=\"headerbarLogOutButton linksShadow\">PROFILE</button>\n                    <button onClick={logout} className=\"headerbarLogOutButton linksShadow\">LOG OUT</button>\n                </div>\n            </div>\n        )\n}\n\nexport default Headerbar;\n\n\n","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/calendar.js",["84","85","86"],"import Axios from \"axios\";\nimport React, {Component} from \"react\";\nimport Controls from \"./controls\"\nimport \"../styles/style.css\"\nimport interceptors from \"../interceptor/interceptor\";\n\nclass Calendar extends Component {\n    \n    state = {\n        users: [],\n        vacations: [],\n        initialDate: {\n            month: (\"0\" + (new Date().getMonth() + 1)).slice(-2),\n            year: new Date().getFullYear()\n        },\n        initialPagination: {\n            pageNo: 0,\n            pageSize: 10,\n            sortBy: \"lastName\",\n            sortOrder: \"ASC\"\n        }\n    }\n        \n    async componentDidMount() {\n        \n          var URL = \"http://localhost:8080/calendar/page\"\n\n        await Axios.get(URL, {\n            params:{\n                pageNo: this.state.initialPagination.pageNo,\n                pageSize: this.state.initialPagination.pageSize,\n                sortBy: this.state.initialPagination.sortBy,\n                sortOrder: this.state.initialPagination.sortOrder,\n                month: this.state.initialDate.month,\n                year: this.state.initialDate.year\n            },\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        }).then(res => {\n            console.log(res.data)\n            this.setState({users: res.data})\n        })\n    }\n\n\n    render () {\n        return (\n            <div>\n                <Controls header = {\"Calendar\"}/>\n                <table className=\"calendarTable\">\n                <thead>\n                    <tr>\n                        <th className=\"calendarHeadCell\">\n                            Employees\n                        </th>\n                        {this.renderTableHead()}\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.renderTableBody()}\n                </tbody>\n            </table>\n            </div>\n\n        )\n    }\n\n    renderTableHead () {\n\n        const initDate = new Date(this.state.initialDate.year, this.state.initialDate.month, 1);\n\n        const currentMonth = this.state.initialDate.month;\n        const currentYear = this.state.initialDate.year;\n\n        var days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n\n        const dates = []\n        const daysOfWeek = []\n        var i = 0;\n        var monthLength = daysInMonth(currentMonth, currentYear)\n\n        for(i = 1; i <= monthLength; i++){\n            var currentDay = returnDayFormat(i);\n            dates.push(currentDay + \"/\" + currentMonth + \"/\" + currentYear);\n            daysOfWeek.push(days[new Date(currentYear, currentMonth-1, i).getDay()])\n        }\n\n        this.state.dates = dates;\n        \n\n\n        return daysOfWeek.map((date, index) => {\n            return (\n                        <th className=\"calendarHeadCell\">\n                            {date}\n                        </th>\n                )\n            }\n        )\n    }\n\n    renderTableBody() {\n\n        return( this.state.users.map((user, index) => {\n            return(\n            <tr>\n                <th><button className=\"calendarNameButton\">{user.userDto.firstName} {user.userDto.lastName}</button></th>\n                {this.renderTableRowsDate(user.holidayStatus)}\n\n            </tr>\n            )\n        }))\n    }\n\n    renderTableRowsDate(holidayStatus) {\n\n        return( \n            holidayStatus.map((date, index) => {\n\n                var buttonClassName = returnVacationTypeTag(date)\n\n            return(\n                <td>\n                    \n                    <div className=\"dateTag\">{this.state.dates[index]}</div>\n                    <button className={\"vacationButton \" + buttonClassName}>{date}</button>\n                </td>\n            )\n        }))\n    }\n    \n}\n\nexport default Calendar\n\nfunction daysInMonth (month, year) { \n    return new Date(year, month, 0).getDate(); \n} \n\nfunction returnDayFormat(day) {\n    return (\"0\" + day).slice(-2);\n}\n\nfunction returnVacationTypeTag(dayStatus){\n    switch (dayStatus) {\n        case 'PAYED':\n            return 'payedVacationButton'\n        case 'UNPAID':\n            return 'payedUnpaidButton'\n        case 'SICK':\n            return 'payedSickButton'\n        case 'MATERNITY':\n            return 'payedMaternityButton'\n        case 'BEREAVEMENT':\n            return 'payedBereavementButton'\n        case 'SABBATICAL':\n            return 'payedSabbaticalButton'\n        default:\n            return \"noVacation\"\n      }\n}","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/team.js",[],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/teams.js",[],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/controls.js",["87","88","89"],"import axios from \"axios\";\nimport React, {Component, useEffect, useState} from \"react\";\nimport \"../styles/style.css\"\n\nconst Controls = ({header, setPagination}) => {\n\n    const[usersCount, setUsersCount] = useState(0)\n    const[state, setState] = useState({\n        filter: \"\", pageNum: 1, pageSize:5,  sortOrder: \"ASC\"\n    })\n\n    useEffect(() => getUsersCount(), [])\n\n    function handleChange(event) {\n        const value = event.target.value;\n        setPagination({\n            ...state,\n            [event.target.name]: value\n        });\n        setState({\n            ...state,\n            [event.target.name]: value\n        });\n    }\n\n\n    const getUsersCount = async () => {\n        const response = await axios.get(\"http://localhost:8080/api/values/user/count\")\n        const { data } = await response;\n        setUsersCount(data);\n    }\n\n    const renderPageNumControls = () => {\n\n        var pageS = [];\n        var i = 0;\n        var max = usersCount / state.pageSize ;\n\n        if(usersCount!=0){\n            for(i = 0; i <= max; i++){\n                pageS.push(i+1)\n            }\n        }\n\n        return( pageS.map((num, index) => {\n            return (\n                <option className=\"controlElement\">  \n                    {num}\n                </option>\n            )})\n        )\n    }\n\n    const renderPageSizeControls = () => {\n\n        var pageS = [];\n        var i = 5;\n\n        if(usersCount!=0){\n            for(i; i <= 25; i=i+5){\n                if(usersCount>i*(state.pageNum-1)){\n                    pageS.push(i)\n                }\n            }\n        }\n\n        return( pageS.map((num, index) => {\n            return (\n                <option className=\"controlElement\">  \n                    {num}\n                </option>\n            )})\n        )\n    }\n\n    return (\n        <form className=\"controlsWrapper\">\n            <div className=\"pageHeader\">{header}</div>\n            <div className=\"controlsElementsWrapper\">\n                <input \n                    type=\"text\" \n                    name=\"filter\" \n                    className=\"filterBar\" \n                    placeholder=\"Filter results\" \n                    onChange={handleChange}\n                />\n\n                <label \n                    className=\"controlsLabels\">\n                        Page:\n                        <select \n                            name=\"pageNum\" \n                            className=\"controlsElements\"\n                            onChange={handleChange}\n                        >\n                            {renderPageNumControls()}\n                        </select>\n                </label>\n\n                <label \n                    className=\"controlsLabels\">\n                        Size: \n                        <select \n                            name=\"pageSize\" \n                            className=\"controlsElements\"\n                            onChange={handleChange}\n                        >\n                            {renderPageSizeControls()}\n                        </select> \n                </label>\n\n                <label \n                    className=\"controlsLabels\">\n                        Order: \n                        <select \n                            name=\"sortOrder\" \n                            className=\"controlsElements\"\n                            onChange={handleChange}\n                        >\n                            <option>ASC</option>\n                            <option>DESC</option>\n                        </select>\n                </label>\n            </div>\n        </form>\n        )\n} \n\nexport default Controls;","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/modal.js",["90"],"import React, {useState, useEffect} from \"react\";\nimport deleteUser from \"../controllers/delete\"\nimport patchUser from \"../controllers/patch\"\n\nimport \"../styles/style.css\"\n\nconst Modal = ({modalData, setModalData}) => {\n\n    const [update, setUpdate] = useState(modalData.data)\n\n    const printObject = () => {\n        if(modalData.action===\"UPDATE\"){\n            return (updateForm())\n        } else {\n            return (deleteForm())\n        }\n    }\n\n    const handleUpdateChange = (event) => {\n        const value = event.target.value;\n        setUpdate({\n            ...update,\n            [event.target.name]: value\n        });\n        console.log(update);\n    }\n\n    const updateForm = () => {\n\n        return(\n            Object.entries(modalData.data).map(([key, value], index) => {\n\n                var a = value;\n\n                return (\n                    <li className=\"modalText\">\n                        <label>\n                            <input \n                                className=\"modalTextInput\" \n                                name={key}\n                                placeholder={value}\n                                value={`${a}`}\n                                onChange={event => (handleUpdateChange(event))}\n                            />\n                        </label>\n                    </li>\n                )\n            })\n        )\n    }\n\n    const deleteForm = () => {\n        return(\n            Object.entries(modalData.data).map(([key, value]) => {\n                return (\n                    <li className=\"modalText\">\n                        {value}\n                    </li>\n                )\n            })\n        )\n    }\n\n    const executeRequest = () => {\n        if(modalData.action === 'UPDATE'){\n            console.log(\"PATCH\")\n            patchUser(\n                {\n                    object: \"user\",\n                    data: update\n                })\n            setModalData({active: true, data: \"\", task: \"\"})\n        } else {\n            deleteUser(\n                {\n                    object: \"user\",\n                    id: modalData.data.id\n                })\n\n            setModalData({active: true, data: \"\", task: \"\"})\n        }\n\n    }\n\n    return(\n            <form\n                className=\"modalWrapper\">\n                <div className=\"modalHeader\">\n                 {modalData.action} EMPLOYEE'S ACCOUNT\n                </div>\n                <ul className=\"modalList\">\n                    {printObject()}\n                </ul>\n                <div className=\"modalButtonsWrapper\">\n                    <button \n                        type=\"button\"\n                        className=\"modalButton\"\n                        onClick={() => setModalData({active: true, data: \"\", task: \"\"})}\n                    >\n                        DISMISS\n                    </button>\n                    <button \n                        type=\"button\"\n                        className={modalData.action === \"UPDATE\" ? `modalButton modalUpdateButton` : `modalButton modalDeleteButton`}\n                        onClick={() => executeRequest(modalData.data.userId)} \n                    >\n                        {modalData.action}\n                    </button>\n                </div>\n            </form>\n    )\n}\n\nexport default Modal","/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/controllers/delete.js",[],"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/controllers/patch.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},{"ruleId":"95","severity":1,"message":"99","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"100","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"101","line":2,"column":26,"nodeType":"97","messageId":"98","endLine":2,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":22,"column":8,"nodeType":"104","endLine":22,"endColumn":20,"suggestions":"105"},{"ruleId":"95","severity":1,"message":"106","line":1,"column":16,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"107","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":20},{"ruleId":"95","severity":1,"message":"108","line":71,"column":15,"nodeType":"97","messageId":"98","endLine":71,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":89,"column":9,"nodeType":"111","endLine":89,"endColumn":19},{"ruleId":"95","severity":1,"message":"106","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":39,"column":22,"nodeType":"114","messageId":"115","endLine":39,"endColumn":24},{"ruleId":"112","severity":1,"message":"113","line":59,"column":22,"nodeType":"114","messageId":"115","endLine":59,"endColumn":24},{"ruleId":"95","severity":1,"message":"101","line":1,"column":26,"nodeType":"97","messageId":"98","endLine":1,"endColumn":35},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'Component' is defined but never used.","'interceptors' is defined but never used.","'initDate' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [fetchUsers, pagination]",{"range":"121","text":"122"},[593,605],"[fetchUsers, pagination]"]