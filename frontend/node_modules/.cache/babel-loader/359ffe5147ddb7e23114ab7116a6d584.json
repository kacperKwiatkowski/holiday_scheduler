{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/calendarControls.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport \"../styles/style.css\";\n\nconst CalendarControls = ({\n  header,\n  setPagination\n}) => {\n  _s();\n\n  const [usersCount, setUsersCount] = useState(0);\n  const [state, setState] = useState({\n    filter: \"\",\n    pageNum: 1,\n    pageSize: 5,\n    sortBy: \"lastName\",\n    sortOrder: \"ASC\",\n    month: (\"0\" + (new Date().getMonth() + 1)).slice(-2),\n    year: new Date().getFullYear()\n  });\n  useEffect(() => getUsersCount(), []);\n\n  function handleChange(event) {\n    const value = event.target.value;\n    setPagination({ ...state,\n      [event.target.name]: value\n    });\n    setState({ ...state,\n      [event.target.name]: value\n    });\n  }\n\n  const getUsersCount = async () => {\n    const response = await axios.get(`http://localhost:8080/api/values/user/count`);\n    const {\n      data\n    } = await response;\n    setUsersCount(data);\n  };\n\n  const renderPageNumControls = () => {\n    var pageS = [];\n    var i = 0;\n    var max = usersCount / state.pageSize;\n    console.log(usersCount);\n\n    if (usersCount != 0) {\n      for (i = 0; i <= max; i++) {\n        pageS.push(i + 1);\n      }\n    }\n\n    return pageS.map((num, index) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        className: \"controlElement\",\n        children: num\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  const renderPageSizeControls = () => {\n    var pageS = [];\n    var i = 0;\n\n    if (usersCount != 0) {\n      for (i; i <= 25; i = i + 5) {\n        if (usersCount > i * state.pageNum) {\n          pageS.push(i + 5);\n        }\n      }\n    }\n\n    return pageS.map((num, index) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        className: \"controlElement\",\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  const months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\n\n  const years = () => {\n    var year = new Date().getFullYear();\n    var years = [];\n    years.push(year - 1);\n    years.push(year);\n    years.push(year + 1);\n    return years;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"controlsWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageHeader\",\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controlsElementsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"filter\",\n        className: \"filterBar\",\n        placeholder: \"Filter results\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"controlsLabels\",\n        children: \"Page:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"pageNum\",\n        className: \"controlsElements\",\n        onChange: handleChange,\n        children: renderPageNumControls()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"controlsLabels\",\n        children: \"Size:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"pageSize\",\n        className: \"controlsElements\",\n        onChange: handleChange,\n        children: renderPageSizeControls()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"controlsLabels\",\n        children: \"Order:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"sortOrder\",\n        className: \"controlsElements\",\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"ASC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"DESC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"controlsLabels\",\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"month\",\n        className: \"controlsElements\",\n        onChange: handleChange,\n        defaultValue: {\n          label: '2',\n          value: '2'\n        },\n        children: months.map(month => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"controlsLabels\",\n        children: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChange,\n        name: \"year\",\n        className: \"controlsElements\",\n        value: setPagination.month,\n        children: years().map(year => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalendarControls, \"ES0JDjMCc7Gfme/hnfVVEQZxgQ0=\");\n\n_c = CalendarControls;\nexport default CalendarControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarControls\");","map":{"version":3,"sources":["/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/calendarControls.js"],"names":["axios","React","Component","useEffect","useState","CalendarControls","header","setPagination","usersCount","setUsersCount","state","setState","filter","pageNum","pageSize","sortBy","sortOrder","month","Date","getMonth","slice","year","getFullYear","getUsersCount","handleChange","event","value","target","name","response","get","data","renderPageNumControls","pageS","i","max","console","log","push","map","num","index","renderPageSizeControls","months","years","label"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, {Component, useEffect, useState} from \"react\";\nimport \"../styles/style.css\"\n\nconst CalendarControls = ({header, setPagination}) => {\n\n    const[usersCount, setUsersCount] = useState(0)\n    const[state, setState] = useState({\n        filter: \"\",\n        pageNum: 1,\n        pageSize: 5,\n        sortBy: \"lastName\",\n        sortOrder: \"ASC\",\n        month: (\"0\" + (new Date().getMonth() + 1)).slice(-2),\n        year: new Date().getFullYear()\n    })\n\n    useEffect(() => getUsersCount(), []);\n\n    function handleChange(event) {\n        const value = event.target.value;\n        setPagination({\n            ...state,\n            [event.target.name]: value\n        });\n        setState({\n            ...state,\n            [event.target.name]: value\n        });\n    }\n\n\n    const getUsersCount = async () => {\n        const response = await axios.get(`http://localhost:8080/api/values/user/count`)\n        const { data } = await response;\n        setUsersCount(data);\n    }\n\n    const renderPageNumControls = () => {\n\n        var pageS = [];\n        var i = 0;\n        var max = usersCount / state.pageSize ;\n        \n        console.log(usersCount)\n\n        if(usersCount!=0){\n            for(i = 0; i <= max; i++){\n                pageS.push(i+1)\n            }\n        }\n\n        return( pageS.map((num, index) => {\n            return (\n                <option \n                    className=\"controlElement\"\n                    key={index}\n                >  \n                    {num}\n                </option>\n            )})\n        )\n    }\n\n    const renderPageSizeControls = () => {\n        var pageS = [];\n        var i = 0;\n\n        if(usersCount!=0){\n            for(i; i <= 25; i=i+5){\n                if(usersCount>i*(state.pageNum)){\n                    pageS.push(i+5)\n                }\n            }\n        }\n\n        return( pageS.map((num, index) => {\n            return (\n                <option className=\"controlElement\">  \n                    {num}\n                </option>\n            )})\n        )\n    }\n\n    const months = ['01','02','03','04','05','06','07','08','09','10','11','12'] \n\n    const years = () => {\n\n        var year = new Date().getFullYear()\n\n        var years = [];\n\n        years.push(year - 1)\n        years.push(year)\n        years.push(year + 1)\n\n        return years;\n    }\n\n\n    return (\n        <form className=\"controlsWrapper\">\n            <div className=\"pageHeader\">{header}</div>\n            <div className=\"controlsElementsWrapper\">\n                <input \n                    type=\"text\" \n                    name=\"filter\" \n                    className=\"filterBar\" \n                    placeholder=\"Filter results\" \n                    onChange={handleChange}\n                />\n\n                <label \n                    className=\"controlsLabels\">\n                        Page:\n                </label>\n                        <select \n                            name=\"pageNum\" \n                            className=\"controlsElements\"\n                            onChange={handleChange}\n                        >\n                            {renderPageNumControls()}\n                        </select>\n\n                <label \n                    className=\"controlsLabels\">\n                        Size: \n                </label>\n                        <select \n                            name=\"pageSize\" \n                            className=\"controlsElements\"\n                            onChange={handleChange}\n                        >\n                            {renderPageSizeControls()}\n                        </select> \n\n                <label \n                    className=\"controlsLabels\">\n                        Order: \n                </label>\n                        <select \n                            name=\"sortOrder\" \n                            className=\"controlsElements\"\n                            onChange={handleChange}\n                        >\n                            <option>ASC</option>\n                            <option>DESC</option>\n                        </select>\n                        \n                <label className=\"controlsLabels\">Month</label>\n                <select\n                    name=\"month\" \n                    className=\"controlsElements\"\n                    onChange={handleChange}\n                    defaultValue={{ label: '2', value: '2' }}\n                >\n                    {\n                        months.map(month => {\n                            return(\n                                <option>{month}</option>\n                            )\n                        })\n                    }\n                </select>\n                <label className=\"controlsLabels\">Year</label>\n                <select\n                    onChange={handleChange}\n                    name=\"year\" \n                    className=\"controlsElements\"\n                    value={setPagination.month}\n                >\n                    {\n                        years().map(year => {\n                            return(\n                                <option>{year}</option>\n                            )\n                        })\n                    }\n                </select>\n            </div>\n        </form>\n        )\n} \n\nexport default CalendarControls;"]},"metadata":{},"sourceType":"module"}