{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport deleteUser from \"../controllers/delete\";\nimport patchUser from \"../controllers/patch\";\nimport \"../styles/style.css\";\n\nconst Modal = ({\n  modalData,\n  setModalData\n}) => {\n  _s();\n\n  const [update, setUpdate] = useState(modalData.data);\n\n  const printObject = () => {\n    if (modalData.action === \"UPDATE\") {\n      return updateForm();\n    } else {\n      return deleteForm();\n    }\n  };\n\n  const handleUpdateChange = event => {\n    const value = event.target.value;\n    setUpdate({ ...update,\n      [event.target.name]: value\n    });\n    console.log(update);\n  };\n\n  const updateForm = () => {\n    return Object.entries(modalData.data).map(([key, value], index) => {\n      var a = value;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"modalText\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"modalTextInput\",\n            name: key,\n            placeholder: value,\n            value: `${a}`,\n            onChange: event => handleUpdateChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const deleteForm = () => {\n    return Object.entries(modalData.data).map(([key, value]) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"modalText\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const executeRequest = () => {\n    if (modalData.action === 'UPDATE') {\n      console.log(\"PATCH\");\n      patchUser({\n        object: \"user\",\n        data: update\n      });\n      setModalData({\n        active: true,\n        data: \"\",\n        task: \"\"\n      });\n    } else {\n      deleteUser({\n        object: \"user\",\n        id: modalData.data.id\n      });\n      setModalData({\n        active: true,\n        data: \"\",\n        task: \"\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"modalWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalHeader\",\n      children: [modalData.action, \" EMPLOYEE'S ACCOUNT\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"modalList\",\n      children: printObject()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalButtonsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"modalButton\",\n        onClick: () => setModalData({\n          active: true,\n          data: \"\",\n          task: \"\"\n        }),\n        children: \"DISMISS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: modalData.action === \"UPDATE\" ? `modalButton modalUpdateButton` : `modalButton modalDeleteButton`,\n        onClick: () => executeRequest(modalData.data.userId),\n        children: modalData.action\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Modal, \"S3O3mCSiurwmlvz1qp4cjkcqc88=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/modal.js"],"names":["React","useState","useEffect","deleteUser","patchUser","Modal","modalData","setModalData","update","setUpdate","data","printObject","action","updateForm","deleteForm","handleUpdateChange","event","value","target","name","console","log","Object","entries","map","key","index","a","executeRequest","object","active","task","id","userId"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport deleteUser from \"../controllers/delete\"\nimport patchUser from \"../controllers/patch\"\n\nimport \"../styles/style.css\"\n\nconst Modal = ({modalData, setModalData}) => {\n\n    const [update, setUpdate] = useState(modalData.data)\n\n    const printObject = () => {\n        if(modalData.action===\"UPDATE\"){\n            return (updateForm())\n        } else {\n            return (deleteForm())\n        }\n    }\n\n    const handleUpdateChange = (event) => {\n        const value = event.target.value;\n        setUpdate({\n            ...update,\n            [event.target.name]: value\n        });\n        console.log(update);\n    }\n\n    const updateForm = () => {\n\n        return(\n            Object.entries(modalData.data).map(([key, value], index) => {\n\n                var a = value;\n\n                return (\n                    <li className=\"modalText\">\n                        <label>\n                            <input \n                                className=\"modalTextInput\" \n                                name={key}\n                                placeholder={value}\n                                value={`${a}`}\n                                onChange={event => (handleUpdateChange(event))}\n                            />\n                        </label>\n                    </li>\n                )\n            })\n        )\n    }\n\n    const deleteForm = () => {\n        return(\n            Object.entries(modalData.data).map(([key, value]) => {\n                return (\n                    <li className=\"modalText\">\n                        {value}\n                    </li>\n                )\n            })\n        )\n    }\n\n    const executeRequest = () => {\n        if(modalData.action === 'UPDATE'){\n            console.log(\"PATCH\")\n            patchUser(\n                {\n                    object: \"user\",\n                    data: update\n                })\n            setModalData({active: true, data: \"\", task: \"\"})\n        } else {\n            deleteUser(\n                {\n                    object: \"user\",\n                    id: modalData.data.id\n                })\n\n            setModalData({active: true, data: \"\", task: \"\"})\n        }\n\n    }\n\n    return(\n            <form\n                className=\"modalWrapper\">\n                <div className=\"modalHeader\">\n                 {modalData.action} EMPLOYEE'S ACCOUNT\n                </div>\n                <ul className=\"modalList\">\n                    {printObject()}\n                </ul>\n                <div className=\"modalButtonsWrapper\">\n                    <button \n                        type=\"button\"\n                        className=\"modalButton\"\n                        onClick={() => setModalData({active: true, data: \"\", task: \"\"})}\n                    >\n                        DISMISS\n                    </button>\n                    <button \n                        type=\"button\"\n                        className={modalData.action === \"UPDATE\" ? `modalButton modalUpdateButton` : `modalButton modalDeleteButton`}\n                        onClick={() => executeRequest(modalData.data.userId)} \n                    >\n                        {modalData.action}\n                    </button>\n                </div>\n            </form>\n    )\n}\n\nexport default Modal"]},"metadata":{},"sourceType":"module"}