{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/forms/updateTeam.js\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport \"../interceptor/interceptor\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { updateObject } from '../actions/updateObject';\n\nconst UpdateUser = ({\n  entity\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [availableLeaders, setAvailableLeaders] = useState([]);\n\n  const getAvailableLeaders = async () => {\n    const response = await Axios.get(\"http://localhost:8080/api/team/read/leaders/available\");\n    const {\n      data\n    } = await response;\n    setAvailableLeaders(data);\n  };\n\n  useEffect(() => getAvailableLeaders(), []);\n\n  const onSubmit = values => {\n    console.log(values.leader);\n    console.log(values.leader.teamLeaderId);\n    values.teamLeaderId = values.leader.id;\n    values.teamLeaderFirstName = values.leader.firstName;\n    values.teamLeaderLastName = values.leader.lastName;\n    values.teamLeaderEmail = values.leader.teamLeaderEmail;\n    dispatch(updateObject({\n      object: \"team\",\n      data: values\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    initialValues: {\n      leader: entity,\n      name: entity.name,\n      id: entity.id,\n      userIds: entity.userIds\n    },\n    render: ({\n      handleSubmit,\n      form,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formFieldsWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formFieldWrapper\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"id\",\n            component: \"input\",\n            type: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel\",\n            children: \"Team leader:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"formTextInput formTextUpdateInput\",\n            name: \"leader\",\n            component: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: true,\n              children: \"Current: \" + entity.teamLeaderFirstName + \" \" + entity.teamLeaderLastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), availableLeaders.map(leader => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: leader.id,\n                children: leader.firstName + \" \" + leader.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 26\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel\",\n            children: \"Team's name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"formTextInput formTextUpdateInput\",\n            name: \"name\",\n            component: \"input\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formButtonsWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"formButton\",\n          type: \"button\",\n          onClick: form.reset,\n          children: \"RESET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `formButton formUpdateButton`,\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateUser, \"q462qmPsLW0nwx8Y2TH0X7ToRHg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UpdateUser;\nexport default UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/forms/updateTeam.js"],"names":["Axios","React","useState","useEffect","Form","Field","useDispatch","updateObject","UpdateUser","entity","dispatch","availableLeaders","setAvailableLeaders","getAvailableLeaders","response","get","data","onSubmit","values","console","log","leader","teamLeaderId","id","teamLeaderFirstName","firstName","teamLeaderLastName","lastName","teamLeaderEmail","object","name","userIds","handleSubmit","form","map","reset"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport \"../interceptor/interceptor\"\n\nimport React, {useState, useEffect} from \"react\";\nimport { Form, Field } from 'react-final-form'\nimport { useDispatch} from 'react-redux';\nimport { updateObject } from '../actions/updateObject'\n\nconst UpdateUser = ({entity}) => {\n\n    const dispatch = useDispatch();  \n\n    const[availableLeaders, setAvailableLeaders] = useState([])\n    \n    const getAvailableLeaders = async () => {\n      const response = await Axios.get(\"http://localhost:8080/api/team/read/leaders/available\")\n      const { data } = await response;\n      setAvailableLeaders(data);\n  }\n\n  useEffect(() => getAvailableLeaders(), []);\n\n\n    const onSubmit = values => {\n\n      console.log(values.leader)\n      console.log(values.leader.teamLeaderId)\n      values.teamLeaderId = values.leader.id\n      values.teamLeaderFirstName = values.leader.firstName\n      values.teamLeaderLastName = values.leader.lastName\n      values.teamLeaderEmail = values.leader.teamLeaderEmail\n      dispatch(updateObject({object: \"team\", data: values}))\n    }\n\n    return (\n        <Form\n        onSubmit={onSubmit}\n        initialValues={\n            {\n              leader: entity,\n              name: entity.name,\n              id: entity.id,\n              userIds: entity.userIds\n            }\n        }\n        render={({ handleSubmit, form, values }) => (\n          <form \n            onSubmit={handleSubmit}\n          >\n            <div className=\"formFieldsWrapper\">\n              <div className=\"formFieldWrapper\">\n                <Field\n                  name=\"id\"\n                  component=\"input\"\n                  type=\"hidden\"\n                />\n              </div>              \n              <div className=\"formFieldWrapper\">\n                <label className=\"formLabel\">Team leader:</label>\n                <Field\n                  className=\"formTextInput formTextUpdateInput\" \n                  name=\"leader\"\n                  component=\"select\"\n                >\n                  <option selected value>{\"Current: \" + entity.teamLeaderFirstName + \" \" + entity.teamLeaderLastName}</option>\n                {availableLeaders.map((leader) => {\n                  return <option value={leader.id}>{leader.firstName + \" \" + leader.lastName}</option>\n                })}\n                </Field>\n              </div>\n              <div className=\"formFieldWrapper\">\n                <label className=\"formLabel\">Team's name:</label>\n                <Field\n                  className=\"formTextInput formTextUpdateInput\" \n                  name=\"name\"\n                  component=\"input\"\n                  type=\"text\"\n                />\n              </div>\n            </div>\n            <div className=\"formButtonsWrapper\">\n                <button\n                    className=\"formButton\"\n                    type=\"button\"\n                    onClick={form.reset}\n                >\n                    RESET\n                </button>\n                <button \n                    type=\"submit\"\n                    className={`formButton formUpdateButton`}\n                >\n                    UPDATE\n                </button>\n\n            </div>\n          </form>\n        )}\n      />\n    )\n\n\n}\nexport default UpdateUser;"]},"metadata":{},"sourceType":"module"}