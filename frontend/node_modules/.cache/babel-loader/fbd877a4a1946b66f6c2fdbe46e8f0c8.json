{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/calendar.js\";\n\nconst Calendar = () => {\n  function daysInMonth(month, year) {\n    return new Date(year, month, 0).getDate();\n  }\n\n  function returnDayFormat(day) {\n    return (\"0\" + day).slice(-2);\n  }\n\n  function returnVacationTypeTag(dayStatus) {\n    switch (dayStatus) {\n      case 'PAYED':\n        return 'payedVacationButton';\n\n      case 'UNPAID':\n        return 'payedUnpaidButton';\n\n      case 'SICK':\n        return 'payedSickButton';\n\n      case 'MATERNITY':\n        return 'payedMaternityButton';\n\n      case 'BEREAVEMENT':\n        return 'payedBereavementButton';\n\n      case 'SABBATICAL':\n        return 'payedSabbaticalButton';\n\n      default:\n        return \"noVacation\";\n    }\n  }\n\n  var daysOfMonth = mapDaysOfWeek();\n\n  function mapDaysOfWeek() {\n    const currentMonth = calendarPagination.month;\n    const currentYear = calendarPagination.year;\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const dates = [];\n    var i;\n    var monthLength = daysInMonth(currentMonth, currentYear);\n\n    for (i = 1; i <= monthLength; i++) {\n      var currentDay = returnDayFormat(i);\n      dates.push({\n        date: currentDay + \"/\" + currentMonth + \"/\" + currentYear,\n        day: days[new Date(currentYear, currentMonth - 1, i).getDay()]\n      });\n    }\n\n    return dates;\n  }\n\n  const renderTableHead = () => {\n    return daysOfMonth.map((date, index) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"calendarHeadCell\",\n        children: date.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const renderTableBody = () => {\n    return records.map((record, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"calendarNameButton\",\n            children: [record.userDto.firstName, \" \", record.userDto.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), renderTableRowsDate(record.holidayStatus)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  const renderTableRowsDate = holidayStatus => {\n    return holidayStatus.map((date, index) => {\n      var buttonClassName = returnVacationTypeTag(date);\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dateTag\",\n          children: daysOfMonth[index].date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"vacationButton \" + buttonClassName,\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"calendarTable\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"calendarHeadCell\",\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), renderTableHead()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: renderTableBody()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/scypion/Programing/Java_Projects/My_Projects/holiday_scheduler/frontend/src/componenets/calendar.js"],"names":["Calendar","daysInMonth","month","year","Date","getDate","returnDayFormat","day","slice","returnVacationTypeTag","dayStatus","daysOfMonth","mapDaysOfWeek","currentMonth","calendarPagination","currentYear","days","dates","i","monthLength","currentDay","push","date","getDay","renderTableHead","map","index","renderTableBody","records","record","userDto","firstName","lastName","renderTableRowsDate","holidayStatus","buttonClassName"],"mappings":"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","sourcesContent":["const Calendar = () => {\n    function daysInMonth (month, year) { \n        return new Date(year, month, 0).getDate(); \n    } \n    \n    function returnDayFormat(day) {\n        return (\"0\" + day).slice(-2);\n    }\n    \n    function returnVacationTypeTag(dayStatus){\n        switch (dayStatus) {\n            case 'PAYED':\n                return 'payedVacationButton'\n            case 'UNPAID':\n                return 'payedUnpaidButton'\n            case 'SICK':\n                return 'payedSickButton'\n            case 'MATERNITY':\n                return 'payedMaternityButton'\n            case 'BEREAVEMENT':\n                return 'payedBereavementButton'\n            case 'SABBATICAL':\n                return 'payedSabbaticalButton'\n            default:\n                return \"noVacation\"\n          }\n    }\n\n    var daysOfMonth = mapDaysOfWeek()\n    \n    function mapDaysOfWeek() {\n        const currentMonth = calendarPagination.month;\n        const currentYear = calendarPagination.year;\n    \n        var days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n    \n        const dates = []\n        var i;\n        var monthLength = daysInMonth(currentMonth, currentYear)\n    \n        for(i = 1; i <= monthLength; i++){\n            var currentDay = returnDayFormat(i);\n\n            dates.push(\n                {\n                    date: currentDay + \"/\" + currentMonth + \"/\" + currentYear,\n                    day: days[new Date(currentYear, currentMonth-1, i).getDay()]\n                }\n            )\n        }\n        return dates;\n    }\n\n    const renderTableHead = () => {\n\n        return( daysOfMonth.map((date, index) => {\n            return (\n                    <th className=\"calendarHeadCell\">\n                        {date.day}\n                    </th>\n                )\n            }\n        ))\n    }\n\n    const renderTableBody = () => {\n\n        return( records.map((record, index) => {\n            return(\n            <tr key={index}>\n                <th><button className=\"calendarNameButton\">\n                    {record.userDto.firstName} {record.userDto.lastName}\n                    </button></th>\n                {renderTableRowsDate(record.holidayStatus)}\n            </tr>\n            )\n        }))\n    }\n\n    const renderTableRowsDate = (holidayStatus) => {\n\n        return( \n            holidayStatus.map((date, index) => {\n                var buttonClassName = returnVacationTypeTag(date)\n            return(\n                <td>\n                    <div className=\"dateTag\">{daysOfMonth[index].date}</div>\n                    <button className={\"vacationButton \" + buttonClassName}>{date}</button>\n                </td>\n            )\n        }))\n    }\n\n    return (\n        <table className=\"calendarTable\">\n            <thead>\n                <tr>\n                    <th className=\"calendarHeadCell\">\n                        Employees\n                    </th>\n                    {renderTableHead()}\n                </tr>\n            </thead>\n            <tbody>\n                {renderTableBody()}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Calendar"]},"metadata":{},"sourceType":"module"}